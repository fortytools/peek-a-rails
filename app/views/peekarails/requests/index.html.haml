.container
  .row
    .col-md-6
      %h4.page-header Requests

      #throughput-graph
        .graph
        .slider

      %h4.page-header Response Time

      #response-graph
        .graph
        .slider

      %h4.page-header Status

      #status-graph
        .graph
        .slider

    .col-md-6
      %h4.page-header Breakdown

      %table.table.table-condensed.table-hover
        %thead
          %tr
            %th Controller#Action
            %th.text-right Requests

        %tbody
          %tr{class: @action.nil? || @action == 'total' ? 'warning' : ''}
            %td
              %strong= link_to 'Total', requests_path(params.merge action_name: 'total')
            %td.text-right= @total_requests
          - @actions.take(20).each do |action|
            %tr{class: action[:name] == @action ? 'warning' : ''}
              %td
                = link_to action[:name], requests_path(params.merge action_name: action[:name])
              %td.text-right= action[:total]

      - if @actions.count > 20
        %p.text-muted= "#{@actions.count - 20} more..."

:coffeescript

  palette = new Rickshaw.Color.Palette { scheme: 'spectrum14' }

  count = #{@minutes_json}
  duration = #{@duration_json}
  status = #{@status_json}

  view_duration = #{@view_duration}
  db_duration = #{@db_duration}
  other_duration = #{@other_duration}

  duration_parts = [
    { "name": "View", "data": view_duration },
    { "name": "DB", "data": db_duration },
    { "name": "Other", "data": other_duration },
  ]

  renderSingleGraph('Requests', count, palette.color(), 'bar', '#throughput-graph')

  renderMultiGraph(duration_parts, '#response-graph')
  renderMultiGraph(status, '#status-graph')

